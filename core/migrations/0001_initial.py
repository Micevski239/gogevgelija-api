# Generated by Django 5.2.7 on 2025-10-09 11:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_mk', models.CharField(max_length=255, null=True)),
                ('subtitle', models.CharField(blank=True, help_text='Brief subtitle or summary', max_length=500)),
                ('subtitle_en', models.CharField(blank=True, help_text='Brief subtitle or summary', max_length=500, null=True)),
                ('subtitle_mk', models.CharField(blank=True, help_text='Brief subtitle or summary', max_length=500, null=True)),
                ('content', models.TextField(help_text='Full blog post content')),
                ('content_en', models.TextField(help_text='Full blog post content', null=True)),
                ('content_mk', models.TextField(help_text='Full blog post content', null=True)),
                ('author', models.CharField(default='GoGevgelija Team', max_length=100)),
                ('author_en', models.CharField(default='GoGevgelija Team', max_length=100, null=True)),
                ('author_mk', models.CharField(default='GoGevgelija Team', max_length=100, null=True)),
                ('category', models.CharField(choices=[('guide', 'Travel Guide'), ('food', 'Food & Dining'), ('culture', 'Culture & History'), ('events', 'Events & Activities'), ('tips', 'Travel Tips'), ('news', 'Local News'), ('lifestyle', 'Lifestyle'), ('other', 'Other')], default='other', max_length=20)),
                ('tags', models.JSONField(default=list, help_text="List of tags, e.g., ['Travel', 'Food', 'Culture']")),
                ('cover_image', models.URLField(help_text='URL to the blog cover image', max_length=1000)),
                ('read_time_minutes', models.PositiveIntegerField(default=5, help_text='Estimated reading time in minutes')),
                ('featured', models.BooleanField(default=False, help_text='Show in featured blogs')),
                ('published', models.BooleanField(default=True, help_text='Whether the blog is published')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('name_en', models.CharField(max_length=50, null=True, unique=True)),
                ('name_mk', models.CharField(max_length=50, null=True, unique=True)),
                ('icon', models.CharField(help_text="Ionicon name (e.g., 'restaurant-outline')", max_length=50)),
                ('image_url', models.URLField(blank=True, help_text='Optional category image URL', max_length=1000, null=True)),
                ('trending', models.BooleanField(default=False, help_text='Show as trending category')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_mk', models.CharField(max_length=255, null=True)),
                ('description', models.TextField(blank=True, help_text='Promotion description')),
                ('description_en', models.TextField(blank=True, help_text='Promotion description', null=True)),
                ('description_mk', models.TextField(blank=True, help_text='Promotion description', null=True)),
                ('has_discount_code', models.BooleanField(default=False, help_text='Whether this promotion has a discount code')),
                ('discount_code', models.CharField(blank=True, help_text='Promo code for discount (only used if has_discount_code is True)', max_length=50)),
                ('tags', models.JSONField(default=list, help_text="List of tags, e.g., ['Today', 'Dine-in', '50% off']")),
                ('tags_mk', models.JSONField(default=list, help_text="List of tags in Macedonian, e.g., ['Денес', 'За јадење', '50% попуст']")),
                ('image', models.URLField(help_text='URL to the promotion image', max_length=1000)),
                ('valid_until', models.DateField(blank=True, help_text='Promotion expiry date', null=True)),
                ('featured', models.BooleanField(default=False, help_text='Show in featured promotions')),
                ('website', models.URLField(blank=True, help_text='Website URL', max_length=500)),
                ('phone_number', models.CharField(blank=True, help_text='Contact phone number', max_length=20, null=True)),
                ('facebook_url', models.URLField(blank=True, help_text='Facebook page URL', max_length=500)),
                ('instagram_url', models.URLField(blank=True, help_text='Instagram profile URL', max_length=500)),
                ('address', models.CharField(blank=True, help_text='Physical address', max_length=500)),
                ('address_en', models.CharField(blank=True, help_text='Physical address', max_length=500, null=True)),
                ('address_mk', models.CharField(blank=True, help_text='Physical address', max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_mk', models.CharField(max_length=255, null=True)),
                ('description', models.TextField(blank=True, help_text='Event description')),
                ('description_en', models.TextField(blank=True, help_text='Event description', null=True)),
                ('description_mk', models.TextField(blank=True, help_text='Event description', null=True)),
                ('date_time', models.CharField(help_text="e.g., 'Fri, 20:00' or 'Dec 25, 18:00'", max_length=100)),
                ('location', models.CharField(help_text='Event venue/location', max_length=255)),
                ('location_en', models.CharField(help_text='Event venue/location', max_length=255, null=True)),
                ('location_mk', models.CharField(help_text='Event venue/location', max_length=255, null=True)),
                ('cover_image', models.URLField(help_text='URL to the event cover image', max_length=1000)),
                ('entry_price', models.CharField(default='Free', help_text="Entry price (e.g., 'Free', '10 EUR', '500 MKD')", max_length=50)),
                ('entry_price_mk', models.CharField(blank=True, help_text="Entry price in Macedonian (e.g., 'Бесплатно', '10 ЕУР', '500 МКД')", max_length=50)),
                ('age_limit', models.CharField(default='All ages welcome', help_text="Age restriction (e.g., 'All ages welcome', '18+', '21+')", max_length=50)),
                ('age_limit_mk', models.CharField(blank=True, help_text="Age restriction in Macedonian (e.g., 'Добредојдени се сите возрасти', '18+', '21+')", max_length=50)),
                ('expectations', models.JSONField(default=list, help_text="List of expectations with icons, e.g., [{'icon': 'musical-notes', 'text': 'Live entertainment'}, {'icon': 'restaurant', 'text': 'Food available'}]")),
                ('expectations_mk', models.JSONField(default=list, help_text="List of expectations in Macedonian with icons, e.g., [{'icon': 'musical-notes', 'text': 'Музика во живо'}, {'icon': 'restaurant', 'text': 'Достапна храна'}]")),
                ('join_count', models.PositiveIntegerField(default=0, help_text='Number of users who joined this event')),
                ('featured', models.BooleanField(default=False, help_text='Show in featured events')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, help_text='Select category from available categories', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.category')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_mk', models.CharField(max_length=255, null=True)),
                ('description', models.TextField(blank=True, help_text='Listing description')),
                ('description_en', models.TextField(blank=True, help_text='Listing description', null=True)),
                ('description_mk', models.TextField(blank=True, help_text='Listing description', null=True)),
                ('address', models.CharField(max_length=500)),
                ('address_en', models.CharField(max_length=500, null=True)),
                ('address_mk', models.CharField(max_length=500, null=True)),
                ('open_time', models.CharField(help_text="e.g., 'Open until 23:00' or 'Mon-Fri 9:00-18:00'", max_length=100)),
                ('open_time_en', models.CharField(help_text="e.g., 'Open until 23:00' or 'Mon-Fri 9:00-18:00'", max_length=100, null=True)),
                ('open_time_mk', models.CharField(help_text="e.g., 'Open until 23:00' or 'Mon-Fri 9:00-18:00'", max_length=100, null=True)),
                ('working_hours', models.JSONField(default=dict, help_text="Working hours structure, e.g., {'monday': '09:00-18:00', 'tuesday': '09:00-18:00', ...}")),
                ('working_hours_mk', models.JSONField(default=dict, help_text="Working hours in Macedonian, e.g., {'понedelник': '09:00-18:00', 'вторник': '09:00-18:00', ...}")),
                ('tags', models.JSONField(default=list, help_text="List of tags, e.g., ['Grill', 'Family', 'Outdoor']")),
                ('tags_mk', models.JSONField(default=list, help_text="List of tags in Macedonian, e.g., ['Скара', 'Семејно', 'Надворешно']")),
                ('image', models.URLField(help_text='URL to the listing image', max_length=1000)),
                ('phone_number', models.CharField(blank=True, help_text='Contact phone number', max_length=20, null=True)),
                ('facebook_url', models.URLField(blank=True, help_text='Facebook page URL', max_length=500, null=True)),
                ('instagram_url', models.URLField(blank=True, help_text='Instagram profile URL', max_length=500, null=True)),
                ('website_url', models.URLField(blank=True, help_text='Official website URL', max_length=500, null=True)),
                ('featured', models.BooleanField(default=False, help_text='Show in featured section')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, help_text='Select category from available categories', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.category')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_preference', models.CharField(choices=[('en', 'English'), ('mk', 'Macedonian')], default='en', help_text="User's preferred language", max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventJoin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='joined_users', to='core.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_joins', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'event')},
            },
        ),
        migrations.CreateModel(
            name='UserPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_edit', models.BooleanField(default=True, help_text='Whether user can edit this listing')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('granted_by', models.ForeignKey(help_text='Admin who granted this permission', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='granted_permissions', to=settings.AUTH_USER_MODEL)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_permissions', to='core.listing')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listing_permissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'listing')},
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist_items', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'content_type', 'object_id')},
            },
        ),
    ]
